{
    "info": {
        "version": "v1.0.0", 
        "title": "Argo Events"
    }, 
    "paths": {}, 
    "swagger": "2.0", 
    "definitions": {
        "S3Filter": {
            "required": [
                "prefix", 
                "suffix"
            ], 
            "type": "object", 
            "description": "S3Filter represents filters to apply to bucket nofifications for specifying constraints on objects", 
            "properties": {
                "prefix": {
                    "type": "string"
                }, 
                "suffix": {
                    "type": "string"
                }
            }
        }, 
        "S3Bucket": {
            "required": [
                "name"
            ], 
            "type": "object", 
            "description": "S3Bucket contains information to describe an S3 Bucket", 
            "properties": {
                "name": {
                    "type": "string"
                }, 
                "key": {
                    "type": "string"
                }
            }
        }, 
        "Amount": {
            "type": "number", 
            "description": "Amount represent a numeric amount."
        }, 
        "Condition": {
            "required": [
                "type", 
                "status"
            ], 
            "type": "object", 
            "description": "Condition contains details about resource state", 
            "properties": {
                "status": {
                    "type": "string", 
                    "description": "Condition status, True, False or Unknown."
                }, 
                "type": {
                    "type": "string", 
                    "description": "Condition type."
                }, 
                "message": {
                    "type": "string", 
                    "description": "Human-readable message indicating details about last transition."
                }, 
                "lastTransitionTime": {
                    "description": "Last time the condition transitioned from one status to another.", 
                    "$ref": "#/definitions/v1.Time"
                }, 
                "reason": {
                    "type": "string", 
                    "description": "Unique, this should be a short, machine understandable string that gives the reason for condition's last transition. For example, \"ImageNotFound\""
                }
            }
        }, 
        "Resource": {
            "type": "object", 
            "description": "Resource represent arbitrary structured data."
        }, 
        "TLSConfig": {
            "required": [
                "caCertPath", 
                "clientCertPath", 
                "clientKeyPath"
            ], 
            "type": "object", 
            "description": "TLSConfig refers to TLS configuration for a client.", 
            "properties": {
                "clientKeyPath": {
                    "type": "string", 
                    "description": "DeprecatedClientKeyPath refers the file path that contains client key. Deprecated: use ClientKeySecret instead"
                }, 
                "clientKeySecret": {
                    "description": "ClientKeySecret refers to the secret that contains the client key", 
                    "$ref": "#/definitions/v1.SecretKeySelector"
                }, 
                "clientCertPath": {
                    "type": "string", 
                    "description": "DeprecatedClientCertPath refers the file path that contains client cert. Deprecated: use ClientCertSecret instead"
                }, 
                "caCertSecret": {
                    "description": "CACertSecret refers to the secret that contains the CA cert", 
                    "$ref": "#/definitions/v1.SecretKeySelector"
                }, 
                "caCertPath": {
                    "type": "string", 
                    "description": "DeprecatedCACertPath refers the file path that contains the CA cert. Deprecated: use CACertSecret instead"
                }, 
                "clientCertSecret": {
                    "description": "ClientCertSecret refers to the secret that contains the client cert", 
                    "$ref": "#/definitions/v1.SecretKeySelector"
                }
            }
        }, 
        "Backoff": {
            "required": [
                "duration", 
                "factor"
            ], 
            "type": "object", 
            "description": "Backoff for an operation", 
            "properties": {
                "duration": {
                    "type": "integer", 
                    "description": "Duration is the duration in nanoseconds", 
                    "format": "int64"
                }, 
                "steps": {
                    "type": "integer", 
                    "description": "Exit with error after this many steps", 
                    "format": "int32"
                }, 
                "jitter": {
                    "description": "The amount of jitter applied each iteration", 
                    "$ref": "#/definitions/Amount"
                }, 
                "factor": {
                    "description": "Duration is multiplied by factor each iteration", 
                    "$ref": "#/definitions/Amount"
                }
            }
        }, 
        "S3Artifact": {
            "required": [
                "endpoint", 
                "bucket", 
                "accessKey", 
                "secretKey"
            ], 
            "type": "object", 
            "description": "S3Artifact contains information about an S3 connection and bucket", 
            "properties": {
                "secretKey": {
                    "$ref": "#/definitions/v1.SecretKeySelector"
                }, 
                "endpoint": {
                    "type": "string"
                }, 
                "insecure": {
                    "type": "boolean"
                }, 
                "bucket": {
                    "$ref": "#/definitions/S3Bucket"
                }, 
                "events": {
                    "items": {
                        "type": "string"
                    }, 
                    "type": "array"
                }, 
                "filter": {
                    "$ref": "#/definitions/S3Filter"
                }, 
                "region": {
                    "type": "string"
                }, 
                "accessKey": {
                    "$ref": "#/definitions/v1.SecretKeySelector"
                }, 
                "metadata": {
                    "additionalProperties": {
                        "type": "string"
                    }, 
                    "type": "object"
                }
            }
        }
    }
}
