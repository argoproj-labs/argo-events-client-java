/*
 * Argo Events
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.5.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.argoproj.events.models.sensor;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.argoproj.events.models.sensor.EventDependency;
import io.argoproj.events.models.sensor.Template;
import io.argoproj.events.models.sensor.Trigger;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for SensorSpec
 */
public class SensorSpecTest {
    private final SensorSpec model = new SensorSpec();

    /**
     * Model tests for SensorSpec
     */
    @Test
    public void testSensorSpec() {
        // TODO: test SensorSpec
    }

    /**
     * Test the property 'eventBusName'
     */
    @Test
    public void eventBusNameTest() {
        // TODO: test eventBusName
    }

    /**
     * Test the property 'triggers'
     */
    @Test
    public void triggersTest() {
        // TODO: test triggers
    }

    /**
     * Test the property 'replicas'
     */
    @Test
    public void replicasTest() {
        // TODO: test replicas
    }

    /**
     * Test the property 'dependencies'
     */
    @Test
    public void dependenciesTest() {
        // TODO: test dependencies
    }

    /**
     * Test the property 'template'
     */
    @Test
    public void templateTest() {
        // TODO: test template
    }

    /**
     * Test the property 'errorOnFailedRound'
     */
    @Test
    public void errorOnFailedRoundTest() {
        // TODO: test errorOnFailedRound
    }

}
