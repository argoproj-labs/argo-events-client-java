/*
 * Argo Events
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.argoproj.events.models.eventsource;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * KafkaConsumerGroup
 */

public class KafkaConsumerGroup {
  public static final String SERIALIZED_NAME_GROUP_NAME = "groupName";
  @SerializedName(SERIALIZED_NAME_GROUP_NAME)
  private String groupName;

  public static final String SERIALIZED_NAME_OLDEST = "oldest";
  @SerializedName(SERIALIZED_NAME_OLDEST)
  private Boolean oldest;

  public static final String SERIALIZED_NAME_REBALANCE_STRATEGY = "rebalanceStrategy";
  @SerializedName(SERIALIZED_NAME_REBALANCE_STRATEGY)
  private String rebalanceStrategy;


  public KafkaConsumerGroup groupName(String groupName) {
    
    this.groupName = groupName;
    return this;
  }

   /**
   * The name for the consumer group to use
   * @return groupName
  **/
  @ApiModelProperty(required = true, value = "The name for the consumer group to use")

  public String getGroupName() {
    return groupName;
  }


  public void setGroupName(String groupName) {
    this.groupName = groupName;
  }


  public KafkaConsumerGroup oldest(Boolean oldest) {
    
    this.oldest = oldest;
    return this;
  }

   /**
   * When starting up a new group do we want to start from the oldest event (true) or the newest event (false), defaults to false
   * @return oldest
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "When starting up a new group do we want to start from the oldest event (true) or the newest event (false), defaults to false")

  public Boolean getOldest() {
    return oldest;
  }


  public void setOldest(Boolean oldest) {
    this.oldest = oldest;
  }


  public KafkaConsumerGroup rebalanceStrategy(String rebalanceStrategy) {
    
    this.rebalanceStrategy = rebalanceStrategy;
    return this;
  }

   /**
   * Rebalance strategy can be one of: sticky, roundrobin, range. Range is the default.
   * @return rebalanceStrategy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Rebalance strategy can be one of: sticky, roundrobin, range. Range is the default.")

  public String getRebalanceStrategy() {
    return rebalanceStrategy;
  }


  public void setRebalanceStrategy(String rebalanceStrategy) {
    this.rebalanceStrategy = rebalanceStrategy;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    KafkaConsumerGroup kafkaConsumerGroup = (KafkaConsumerGroup) o;
    return Objects.equals(this.groupName, kafkaConsumerGroup.groupName) &&
        Objects.equals(this.oldest, kafkaConsumerGroup.oldest) &&
        Objects.equals(this.rebalanceStrategy, kafkaConsumerGroup.rebalanceStrategy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(groupName, oldest, rebalanceStrategy);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class KafkaConsumerGroup {\n");
    sb.append("    groupName: ").append(toIndentedString(groupName)).append("\n");
    sb.append("    oldest: ").append(toIndentedString(oldest)).append("\n");
    sb.append("    rebalanceStrategy: ").append(toIndentedString(rebalanceStrategy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

