/*
 * Argo Events
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.6.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.argoproj.events.models.eventsource;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * BitbucketServerRepository
 */

public class BitbucketServerRepository {
  public static final String SERIALIZED_NAME_REPOSITORY_SLUG = "repositorySlug";
  @SerializedName(SERIALIZED_NAME_REPOSITORY_SLUG)
  private String repositorySlug;

  public static final String SERIALIZED_NAME_PROJECT_KEY = "projectKey";
  @SerializedName(SERIALIZED_NAME_PROJECT_KEY)
  private String projectKey;


  public BitbucketServerRepository repositorySlug(String repositorySlug) {
    
    this.repositorySlug = repositorySlug;
    return this;
  }

   /**
   * RepositorySlug is the slug of the repository for which integration needs to setup
   * @return repositorySlug
  **/
  @ApiModelProperty(required = true, value = "RepositorySlug is the slug of the repository for which integration needs to setup")

  public String getRepositorySlug() {
    return repositorySlug;
  }


  public void setRepositorySlug(String repositorySlug) {
    this.repositorySlug = repositorySlug;
  }


  public BitbucketServerRepository projectKey(String projectKey) {
    
    this.projectKey = projectKey;
    return this;
  }

   /**
   * ProjectKey is the key of project for which integration needs to setup
   * @return projectKey
  **/
  @ApiModelProperty(required = true, value = "ProjectKey is the key of project for which integration needs to setup")

  public String getProjectKey() {
    return projectKey;
  }


  public void setProjectKey(String projectKey) {
    this.projectKey = projectKey;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BitbucketServerRepository bitbucketServerRepository = (BitbucketServerRepository) o;
    return Objects.equals(this.repositorySlug, bitbucketServerRepository.repositorySlug) &&
        Objects.equals(this.projectKey, bitbucketServerRepository.projectKey);
  }

  @Override
  public int hashCode() {
    return Objects.hash(repositorySlug, projectKey);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BitbucketServerRepository {\n");
    sb.append("    repositorySlug: ").append(toIndentedString(repositorySlug)).append("\n");
    sb.append("    projectKey: ").append(toIndentedString(projectKey)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

