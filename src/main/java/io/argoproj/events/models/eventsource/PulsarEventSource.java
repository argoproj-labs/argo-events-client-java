/*
 * Argo Events
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.5.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.argoproj.events.models.eventsource;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.kubernetes.client.openapi.models.V1SecretKeySelector;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * PulsarEventSource describes the event source for Apache Pulsar
 */
@ApiModel(description = "PulsarEventSource describes the event source for Apache Pulsar")

public class PulsarEventSource {
  public static final String SERIALIZED_NAME_TLS = "tls";
  @SerializedName(SERIALIZED_NAME_TLS)
  private io.argoproj.events.models.common.TLSConfig tls = null;

  public static final String SERIALIZED_NAME_CONNECTION_BACKOFF = "connectionBackoff";
  @SerializedName(SERIALIZED_NAME_CONNECTION_BACKOFF)
  private io.argoproj.events.models.common.Backoff connectionBackoff = null;

  public static final String SERIALIZED_NAME_AUTH_TOKEN_SECRET = "authTokenSecret";
  @SerializedName(SERIALIZED_NAME_AUTH_TOKEN_SECRET)
  private V1SecretKeySelector authTokenSecret = null;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_JSON_BODY = "jsonBody";
  @SerializedName(SERIALIZED_NAME_JSON_BODY)
  private Boolean jsonBody;

  public static final String SERIALIZED_NAME_TOPICS = "topics";
  @SerializedName(SERIALIZED_NAME_TOPICS)
  private List<String> topics = new ArrayList<String>();

  public static final String SERIALIZED_NAME_TLS_TRUST_CERTS_SECRET = "tlsTrustCertsSecret";
  @SerializedName(SERIALIZED_NAME_TLS_TRUST_CERTS_SECRET)
  private V1SecretKeySelector tlsTrustCertsSecret = null;

  public static final String SERIALIZED_NAME_TLS_ALLOW_INSECURE_CONNECTION = "tlsAllowInsecureConnection";
  @SerializedName(SERIALIZED_NAME_TLS_ALLOW_INSECURE_CONNECTION)
  private Boolean tlsAllowInsecureConnection;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_TLS_VALIDATE_HOSTNAME = "tlsValidateHostname";
  @SerializedName(SERIALIZED_NAME_TLS_VALIDATE_HOSTNAME)
  private Boolean tlsValidateHostname;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private Map<String, String> metadata = null;


  public PulsarEventSource tls(io.argoproj.events.models.common.TLSConfig tls) {
    
    this.tls = tls;
    return this;
  }

   /**
   * Get tls
   * @return tls
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public io.argoproj.events.models.common.TLSConfig getTls() {
    return tls;
  }


  public void setTls(io.argoproj.events.models.common.TLSConfig tls) {
    this.tls = tls;
  }


  public PulsarEventSource connectionBackoff(io.argoproj.events.models.common.Backoff connectionBackoff) {
    
    this.connectionBackoff = connectionBackoff;
    return this;
  }

   /**
   * Get connectionBackoff
   * @return connectionBackoff
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public io.argoproj.events.models.common.Backoff getConnectionBackoff() {
    return connectionBackoff;
  }


  public void setConnectionBackoff(io.argoproj.events.models.common.Backoff connectionBackoff) {
    this.connectionBackoff = connectionBackoff;
  }


  public PulsarEventSource authTokenSecret(V1SecretKeySelector authTokenSecret) {
    
    this.authTokenSecret = authTokenSecret;
    return this;
  }

   /**
   * Get authTokenSecret
   * @return authTokenSecret
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1SecretKeySelector getAuthTokenSecret() {
    return authTokenSecret;
  }


  public void setAuthTokenSecret(V1SecretKeySelector authTokenSecret) {
    this.authTokenSecret = authTokenSecret;
  }


  public PulsarEventSource url(String url) {
    
    this.url = url;
    return this;
  }

   /**
   * Configure the service URL for the Pulsar service.
   * @return url
  **/
  @ApiModelProperty(required = true, value = "Configure the service URL for the Pulsar service.")

  public String getUrl() {
    return url;
  }


  public void setUrl(String url) {
    this.url = url;
  }


  public PulsarEventSource jsonBody(Boolean jsonBody) {
    
    this.jsonBody = jsonBody;
    return this;
  }

   /**
   * JSONBody specifies that all event body payload coming from this source will be JSON
   * @return jsonBody
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "JSONBody specifies that all event body payload coming from this source will be JSON")

  public Boolean getJsonBody() {
    return jsonBody;
  }


  public void setJsonBody(Boolean jsonBody) {
    this.jsonBody = jsonBody;
  }


  public PulsarEventSource topics(List<String> topics) {
    
    this.topics = topics;
    return this;
  }

  public PulsarEventSource addTopicsItem(String topicsItem) {
    this.topics.add(topicsItem);
    return this;
  }

   /**
   * Name of the topics to subscribe to.
   * @return topics
  **/
  @ApiModelProperty(required = true, value = "Name of the topics to subscribe to.")

  public List<String> getTopics() {
    return topics;
  }


  public void setTopics(List<String> topics) {
    this.topics = topics;
  }


  public PulsarEventSource tlsTrustCertsSecret(V1SecretKeySelector tlsTrustCertsSecret) {
    
    this.tlsTrustCertsSecret = tlsTrustCertsSecret;
    return this;
  }

   /**
   * Get tlsTrustCertsSecret
   * @return tlsTrustCertsSecret
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1SecretKeySelector getTlsTrustCertsSecret() {
    return tlsTrustCertsSecret;
  }


  public void setTlsTrustCertsSecret(V1SecretKeySelector tlsTrustCertsSecret) {
    this.tlsTrustCertsSecret = tlsTrustCertsSecret;
  }


  public PulsarEventSource tlsAllowInsecureConnection(Boolean tlsAllowInsecureConnection) {
    
    this.tlsAllowInsecureConnection = tlsAllowInsecureConnection;
    return this;
  }

   /**
   * Whether the Pulsar client accept untrusted TLS certificate from broker.
   * @return tlsAllowInsecureConnection
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the Pulsar client accept untrusted TLS certificate from broker.")

  public Boolean getTlsAllowInsecureConnection() {
    return tlsAllowInsecureConnection;
  }


  public void setTlsAllowInsecureConnection(Boolean tlsAllowInsecureConnection) {
    this.tlsAllowInsecureConnection = tlsAllowInsecureConnection;
  }


  public PulsarEventSource type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Type of the subscription. Only \&quot;exclusive\&quot; and \&quot;shared\&quot; is supported. Defaults to exclusive.
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Type of the subscription. Only \"exclusive\" and \"shared\" is supported. Defaults to exclusive.")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  public PulsarEventSource tlsValidateHostname(Boolean tlsValidateHostname) {
    
    this.tlsValidateHostname = tlsValidateHostname;
    return this;
  }

   /**
   * Whether the Pulsar client verify the validity of the host name from broker.
   * @return tlsValidateHostname
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the Pulsar client verify the validity of the host name from broker.")

  public Boolean getTlsValidateHostname() {
    return tlsValidateHostname;
  }


  public void setTlsValidateHostname(Boolean tlsValidateHostname) {
    this.tlsValidateHostname = tlsValidateHostname;
  }


  public PulsarEventSource metadata(Map<String, String> metadata) {
    
    this.metadata = metadata;
    return this;
  }

  public PulsarEventSource putMetadataItem(String key, String metadataItem) {
    if (this.metadata == null) {
      this.metadata = new HashMap<String, String>();
    }
    this.metadata.put(key, metadataItem);
    return this;
  }

   /**
   * Metadata holds the user defined metadata which will passed along the event payload.
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Metadata holds the user defined metadata which will passed along the event payload.")

  public Map<String, String> getMetadata() {
    return metadata;
  }


  public void setMetadata(Map<String, String> metadata) {
    this.metadata = metadata;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PulsarEventSource pulsarEventSource = (PulsarEventSource) o;
    return Objects.equals(this.tls, pulsarEventSource.tls) &&
        Objects.equals(this.connectionBackoff, pulsarEventSource.connectionBackoff) &&
        Objects.equals(this.authTokenSecret, pulsarEventSource.authTokenSecret) &&
        Objects.equals(this.url, pulsarEventSource.url) &&
        Objects.equals(this.jsonBody, pulsarEventSource.jsonBody) &&
        Objects.equals(this.topics, pulsarEventSource.topics) &&
        Objects.equals(this.tlsTrustCertsSecret, pulsarEventSource.tlsTrustCertsSecret) &&
        Objects.equals(this.tlsAllowInsecureConnection, pulsarEventSource.tlsAllowInsecureConnection) &&
        Objects.equals(this.type, pulsarEventSource.type) &&
        Objects.equals(this.tlsValidateHostname, pulsarEventSource.tlsValidateHostname) &&
        Objects.equals(this.metadata, pulsarEventSource.metadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tls, connectionBackoff, authTokenSecret, url, jsonBody, topics, tlsTrustCertsSecret, tlsAllowInsecureConnection, type, tlsValidateHostname, metadata);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PulsarEventSource {\n");
    sb.append("    tls: ").append(toIndentedString(tls)).append("\n");
    sb.append("    connectionBackoff: ").append(toIndentedString(connectionBackoff)).append("\n");
    sb.append("    authTokenSecret: ").append(toIndentedString(authTokenSecret)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    jsonBody: ").append(toIndentedString(jsonBody)).append("\n");
    sb.append("    topics: ").append(toIndentedString(topics)).append("\n");
    sb.append("    tlsTrustCertsSecret: ").append(toIndentedString(tlsTrustCertsSecret)).append("\n");
    sb.append("    tlsAllowInsecureConnection: ").append(toIndentedString(tlsAllowInsecureConnection)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    tlsValidateHostname: ").append(toIndentedString(tlsValidateHostname)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

