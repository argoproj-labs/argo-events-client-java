/*
 * Argo Events
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.5.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.argoproj.events.models.eventsource;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.kubernetes.client.openapi.models.V1SecretKeySelector;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * NATSAuth refers to the auth info for NATS EventSource
 */
@ApiModel(description = "NATSAuth refers to the auth info for NATS EventSource")

public class NATSAuth {
  public static final String SERIALIZED_NAME_CREDENTIAL = "credential";
  @SerializedName(SERIALIZED_NAME_CREDENTIAL)
  private V1SecretKeySelector credential = null;

  public static final String SERIALIZED_NAME_TOKEN = "token";
  @SerializedName(SERIALIZED_NAME_TOKEN)
  private V1SecretKeySelector token = null;

  public static final String SERIALIZED_NAME_NKEY = "nkey";
  @SerializedName(SERIALIZED_NAME_NKEY)
  private V1SecretKeySelector nkey = null;

  public static final String SERIALIZED_NAME_BASIC = "basic";
  @SerializedName(SERIALIZED_NAME_BASIC)
  private io.argoproj.events.models.common.BasicAuth basic = null;


  public NATSAuth credential(V1SecretKeySelector credential) {
    
    this.credential = credential;
    return this;
  }

   /**
   * Get credential
   * @return credential
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1SecretKeySelector getCredential() {
    return credential;
  }


  public void setCredential(V1SecretKeySelector credential) {
    this.credential = credential;
  }


  public NATSAuth token(V1SecretKeySelector token) {
    
    this.token = token;
    return this;
  }

   /**
   * Get token
   * @return token
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1SecretKeySelector getToken() {
    return token;
  }


  public void setToken(V1SecretKeySelector token) {
    this.token = token;
  }


  public NATSAuth nkey(V1SecretKeySelector nkey) {
    
    this.nkey = nkey;
    return this;
  }

   /**
   * Get nkey
   * @return nkey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1SecretKeySelector getNkey() {
    return nkey;
  }


  public void setNkey(V1SecretKeySelector nkey) {
    this.nkey = nkey;
  }


  public NATSAuth basic(io.argoproj.events.models.common.BasicAuth basic) {
    
    this.basic = basic;
    return this;
  }

   /**
   * Get basic
   * @return basic
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public io.argoproj.events.models.common.BasicAuth getBasic() {
    return basic;
  }


  public void setBasic(io.argoproj.events.models.common.BasicAuth basic) {
    this.basic = basic;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NATSAuth naTSAuth = (NATSAuth) o;
    return Objects.equals(this.credential, naTSAuth.credential) &&
        Objects.equals(this.token, naTSAuth.token) &&
        Objects.equals(this.nkey, naTSAuth.nkey) &&
        Objects.equals(this.basic, naTSAuth.basic);
  }

  @Override
  public int hashCode() {
    return Objects.hash(credential, token, nkey, basic);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NATSAuth {\n");
    sb.append("    credential: ").append(toIndentedString(credential)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    nkey: ").append(toIndentedString(nkey)).append("\n");
    sb.append("    basic: ").append(toIndentedString(basic)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

