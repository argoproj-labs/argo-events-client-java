/*
 * Argo Events
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.6.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.argoproj.events.models.sensor;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.argoproj.events.models.sensor.TriggerParameter;
import io.kubernetes.client.openapi.models.V1SecretKeySelector;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * CustomTrigger refers to the specification of the custom trigger.
 */
@ApiModel(description = "CustomTrigger refers to the specification of the custom trigger.")

public class CustomTrigger {
  public static final String SERIALIZED_NAME_SERVER_NAME_OVERRIDE = "serverNameOverride";
  @SerializedName(SERIALIZED_NAME_SERVER_NAME_OVERRIDE)
  private String serverNameOverride;

  public static final String SERIALIZED_NAME_SECURE = "secure";
  @SerializedName(SERIALIZED_NAME_SECURE)
  private Boolean secure;

  public static final String SERIALIZED_NAME_PARAMETERS = "parameters";
  @SerializedName(SERIALIZED_NAME_PARAMETERS)
  private List<TriggerParameter> parameters = null;

  public static final String SERIALIZED_NAME_SERVER_U_R_L = "serverURL";
  @SerializedName(SERIALIZED_NAME_SERVER_U_R_L)
  private String serverURL;

  public static final String SERIALIZED_NAME_SPEC = "spec";
  @SerializedName(SERIALIZED_NAME_SPEC)
  private Map<String, String> spec = new HashMap<String, String>();

  public static final String SERIALIZED_NAME_CERT_SECRET = "certSecret";
  @SerializedName(SERIALIZED_NAME_CERT_SECRET)
  private V1SecretKeySelector certSecret = null;

  public static final String SERIALIZED_NAME_PAYLOAD = "payload";
  @SerializedName(SERIALIZED_NAME_PAYLOAD)
  private List<TriggerParameter> payload = new ArrayList<TriggerParameter>();


  public CustomTrigger serverNameOverride(String serverNameOverride) {
    
    this.serverNameOverride = serverNameOverride;
    return this;
  }

   /**
   * ServerNameOverride for the secure connection between sensor and custom trigger gRPC server.
   * @return serverNameOverride
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ServerNameOverride for the secure connection between sensor and custom trigger gRPC server.")

  public String getServerNameOverride() {
    return serverNameOverride;
  }


  public void setServerNameOverride(String serverNameOverride) {
    this.serverNameOverride = serverNameOverride;
  }


  public CustomTrigger secure(Boolean secure) {
    
    this.secure = secure;
    return this;
  }

   /**
   * Secure refers to type of the connection between sensor to custom trigger gRPC
   * @return secure
  **/
  @ApiModelProperty(required = true, value = "Secure refers to type of the connection between sensor to custom trigger gRPC")

  public Boolean getSecure() {
    return secure;
  }


  public void setSecure(Boolean secure) {
    this.secure = secure;
  }


  public CustomTrigger parameters(List<TriggerParameter> parameters) {
    
    this.parameters = parameters;
    return this;
  }

  public CustomTrigger addParametersItem(TriggerParameter parametersItem) {
    if (this.parameters == null) {
      this.parameters = new ArrayList<TriggerParameter>();
    }
    this.parameters.add(parametersItem);
    return this;
  }

   /**
   * Parameters is the list of parameters that is applied to resolved custom trigger trigger object.
   * @return parameters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Parameters is the list of parameters that is applied to resolved custom trigger trigger object.")

  public List<TriggerParameter> getParameters() {
    return parameters;
  }


  public void setParameters(List<TriggerParameter> parameters) {
    this.parameters = parameters;
  }


  public CustomTrigger serverURL(String serverURL) {
    
    this.serverURL = serverURL;
    return this;
  }

   /**
   * ServerURL is the url of the gRPC server that executes custom trigger
   * @return serverURL
  **/
  @ApiModelProperty(required = true, value = "ServerURL is the url of the gRPC server that executes custom trigger")

  public String getServerURL() {
    return serverURL;
  }


  public void setServerURL(String serverURL) {
    this.serverURL = serverURL;
  }


  public CustomTrigger spec(Map<String, String> spec) {
    
    this.spec = spec;
    return this;
  }

  public CustomTrigger putSpecItem(String key, String specItem) {
    this.spec.put(key, specItem);
    return this;
  }

   /**
   * Spec is the custom trigger resource specification that custom trigger gRPC server knows how to interpret.
   * @return spec
  **/
  @ApiModelProperty(required = true, value = "Spec is the custom trigger resource specification that custom trigger gRPC server knows how to interpret.")

  public Map<String, String> getSpec() {
    return spec;
  }


  public void setSpec(Map<String, String> spec) {
    this.spec = spec;
  }


  public CustomTrigger certSecret(V1SecretKeySelector certSecret) {
    
    this.certSecret = certSecret;
    return this;
  }

   /**
   * Get certSecret
   * @return certSecret
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1SecretKeySelector getCertSecret() {
    return certSecret;
  }


  public void setCertSecret(V1SecretKeySelector certSecret) {
    this.certSecret = certSecret;
  }


  public CustomTrigger payload(List<TriggerParameter> payload) {
    
    this.payload = payload;
    return this;
  }

  public CustomTrigger addPayloadItem(TriggerParameter payloadItem) {
    this.payload.add(payloadItem);
    return this;
  }

   /**
   * Payload is the list of key-value extracted from an event payload to construct the request payload.
   * @return payload
  **/
  @ApiModelProperty(required = true, value = "Payload is the list of key-value extracted from an event payload to construct the request payload.")

  public List<TriggerParameter> getPayload() {
    return payload;
  }


  public void setPayload(List<TriggerParameter> payload) {
    this.payload = payload;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomTrigger customTrigger = (CustomTrigger) o;
    return Objects.equals(this.serverNameOverride, customTrigger.serverNameOverride) &&
        Objects.equals(this.secure, customTrigger.secure) &&
        Objects.equals(this.parameters, customTrigger.parameters) &&
        Objects.equals(this.serverURL, customTrigger.serverURL) &&
        Objects.equals(this.spec, customTrigger.spec) &&
        Objects.equals(this.certSecret, customTrigger.certSecret) &&
        Objects.equals(this.payload, customTrigger.payload);
  }

  @Override
  public int hashCode() {
    return Objects.hash(serverNameOverride, secure, parameters, serverURL, spec, certSecret, payload);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomTrigger {\n");
    sb.append("    serverNameOverride: ").append(toIndentedString(serverNameOverride)).append("\n");
    sb.append("    secure: ").append(toIndentedString(secure)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    serverURL: ").append(toIndentedString(serverURL)).append("\n");
    sb.append("    spec: ").append(toIndentedString(spec)).append("\n");
    sb.append("    certSecret: ").append(toIndentedString(certSecret)).append("\n");
    sb.append("    payload: ").append(toIndentedString(payload)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

