/*
 * Argo Events
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.5.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.argoproj.events.models.sensor;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.argoproj.events.models.sensor.TriggerParameterSource;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * TriggerParameter indicates a passed parameter to a service template
 */
@ApiModel(description = "TriggerParameter indicates a passed parameter to a service template")

public class TriggerParameter {
  public static final String SERIALIZED_NAME_DEST = "dest";
  @SerializedName(SERIALIZED_NAME_DEST)
  private String dest;

  public static final String SERIALIZED_NAME_SRC = "src";
  @SerializedName(SERIALIZED_NAME_SRC)
  private TriggerParameterSource src;

  public static final String SERIALIZED_NAME_OPERATION = "operation";
  @SerializedName(SERIALIZED_NAME_OPERATION)
  private String operation;


  public TriggerParameter dest(String dest) {
    
    this.dest = dest;
    return this;
  }

   /**
   * Dest is the JSONPath of a resource key. A path is a series of keys separated by a dot. The colon character can be escaped with &#39;.&#39; The -1 key can be used to append a value to an existing array. See https://github.com/tidwall/sjson#path-syntax for more information about how this is used.
   * @return dest
  **/
  @ApiModelProperty(required = true, value = "Dest is the JSONPath of a resource key. A path is a series of keys separated by a dot. The colon character can be escaped with '.' The -1 key can be used to append a value to an existing array. See https://github.com/tidwall/sjson#path-syntax for more information about how this is used.")

  public String getDest() {
    return dest;
  }


  public void setDest(String dest) {
    this.dest = dest;
  }


  public TriggerParameter src(TriggerParameterSource src) {
    
    this.src = src;
    return this;
  }

   /**
   * Get src
   * @return src
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public TriggerParameterSource getSrc() {
    return src;
  }


  public void setSrc(TriggerParameterSource src) {
    this.src = src;
  }


  public TriggerParameter operation(String operation) {
    
    this.operation = operation;
    return this;
  }

   /**
   * Operation is what to do with the existing value at Dest, whether to &#39;prepend&#39;, &#39;overwrite&#39;, or &#39;append&#39; it.
   * @return operation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Operation is what to do with the existing value at Dest, whether to 'prepend', 'overwrite', or 'append' it.")

  public String getOperation() {
    return operation;
  }


  public void setOperation(String operation) {
    this.operation = operation;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TriggerParameter triggerParameter = (TriggerParameter) o;
    return Objects.equals(this.dest, triggerParameter.dest) &&
        Objects.equals(this.src, triggerParameter.src) &&
        Objects.equals(this.operation, triggerParameter.operation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dest, src, operation);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TriggerParameter {\n");
    sb.append("    dest: ").append(toIndentedString(dest)).append("\n");
    sb.append("    src: ").append(toIndentedString(src)).append("\n");
    sb.append("    operation: ").append(toIndentedString(operation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

